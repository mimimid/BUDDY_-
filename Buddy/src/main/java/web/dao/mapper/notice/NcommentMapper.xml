<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="notice.dao.face.NcommentDao">    

	
  	<update id="insert" parameterType="notice.dto.Ncomment">   
			  <selectKey keyProperty="ncmtno" resultType="int" order="BEFORE">
   				 select notie_comment_seq.nextval FROM DUAL
  			  </selectKey>
		INSERT INTO notie_comment (ncmt_no, notice_no, ncmt_content, writer, w_date)
					VALUES( #{ncmtno },  #{noticeno }, #{ncmtcontent }, #{writer }, SYSDATE )
	</update> 
	
	  <delete id="delete" parameterType="notice.dto.Ncomment">
    delete from notie_comment where ncmt_no = #{ncmtno }
 	 </delete>
  
	
<!-- 		<update id="update" parameterType="notice.dto.Ncomment">   
				UPDATE notie_comment SET ncmt_content = #{ncmtcontent } WHERE ncmtno = #{ncmtno }
		</update> -->
		
		<select id="selectAllByRecent" resultType="hashmap" parameterType="int">

			select * from (
			SELECT n.ncmt_no, n.ncmt_content, n.writer, n.w_date, n.notice_no, l.ncmt_like_no, l.user_id
			FROM notie_comment n
			LEFT OUTER JOIN notice_cmt_like l
			ON n.ncmt_no = l.ncmt_no ) t1
			left outer join (
			select count(user_id) as likecount, k.ncmt_no from (
			SELECT l.ncmt_like_no, l.user_id, n.ncmt_no, n.ncmt_content, n.writer, n.w_date, n.notice_no
			FROM notie_comment n
			LEFT OUTER JOIN notice_cmt_like l
			ON n.ncmt_no = l.ncmt_no )k
			group by k.ncmt_no) t2
			on t1.ncmt_no = t2.ncmt_no
			WHERE notice_no = #{noticeno }
			ORDER BY w_date desc
	   </select> 
	   
	   		<select id="selectAllByLike" resultType="hashmap" parameterType="int">

			select * from (
			SELECT n.ncmt_no, n.ncmt_content, n.writer, n.w_date, n.notice_no, l.ncmt_like_no, l.user_id
			FROM notie_comment n
			LEFT OUTER JOIN notice_cmt_like l
			ON n.ncmt_no = l.ncmt_no ) t1
			left outer join (
			select count(user_id) as likecount, k.ncmt_no from (
			SELECT l.ncmt_like_no, l.user_id, n.ncmt_no, n.ncmt_content, n.writer, n.w_date, n.notice_no
			FROM notie_comment n
			LEFT OUTER JOIN notice_cmt_like l
			ON n.ncmt_no = l.ncmt_no )k
			group by k.ncmt_no) t2
			on t1.ncmt_no = t2.ncmt_no
			WHERE notice_no = #{noticeno }
			ORDER BY likecount desc
	   </select> 
	   
	 <select id="selectLikeCmts" parameterType="map" resultType="hashmap">
		select * from notie_comment t1
		left outer join 
		notice_cmt_like t2
		on t1.ncmt_no = t2.ncmt_no
		where notice_no = #{noticeno }
		and
		user_id = #{userid }
	</select> 
	
 	<update id="insertLike" parameterType="map">
		<selectKey keyProperty="ncmt_like_no" resultType="int" order="BEFORE">
   		      select notice_cmt_like_seq.nextval FROM DUAL
  		</selectKey>
		INSERT INTO notice_cmt_like (ncmt_like_no, ncmt_no, user_id)
		VALUES( #{ncmt_like_no },  #{ncmtno }, #{userid } )
	</update>  

	<delete id="deleteLike" parameterType="map">
	DELETE FROM notice_cmt_like
	WHERE ncmt_no = #{ncmtno }
	</delete>
	

</mapper>